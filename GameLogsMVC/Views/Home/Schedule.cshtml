@model GameLogsMVC.Models.ViewData.FullScheduleView

<h2>Schedule</h2>

@*@if (Model.League == "MLB" || Model.League == "NBA")
{
    <select id="monthSelect" onchange="ChangeMonth(this.value)">
        @if(Model.League == "MLB")
        {
            <option value="0315-0501" selected="@(Model.Dates.Substring(4,4) == "0315")">March/April</option>
            <option value="0501-0601" selected="@(Model.Dates.Substring(4,4) == "0501")">May</option>
            <option value="0601-0701" selected="@(Model.Dates.Substring(4,4) == "0601")">June</option>
            <option value="0701-0801" selected="@(Model.Dates.Substring(4,4) == "0701")">July</option>
            <option value="0801-0901" selected="@(Model.Dates.Substring(4,4) == "0801")">August</option>
            <option value="0901-1001" selected="@(Model.Dates.Substring(4,4) == "0901")">September</option>
            <option value="1001-1115" selected="@(Model.Dates.Substring(4,4) == "1001")">October/November</option>
        }
        else
        {
            <option value="1015-1201" selected="@(Model.Dates.Substring(4,4) == "1015")">November</option>
            <option value="1201-0101" selected="@(Model.Dates.Substring(4,4) == "1201")">December</option>
            <option value="0101-0201" selected="@(Model.Dates.Substring(4,4) == "0101")">January</option>
            <option value="0201-0301" selected="@(Model.Dates.Substring(4,4) == "0201")">February</option>
            <option value="0301-0401" selected="@(Model.Dates.Substring(4,4) == "0301")">March</option>
            <option value="0401-0501" selected="@(Model.Dates.Substring(4,4) == "0401")">April</option>
            <option value="0501-0601" selected="@(Model.Dates.Substring(4,4) == "0501")">May</option>
            <option value="0601-0701" selected="@(Model.Dates.Substring(4,4) == "0601")">June</option>
        }
        
    </select>
}*@
@if(Model.League != "NBA")
{
    <select id="yearSelect" onchange="ChangeYear(this.value)">
        @for (int year = 2023; year > 2002; year--)
        {
            <option value="@year" selected="@(Model.Dates.Substring(0,4) == Convert.ToString(year))">@year</option>
        }
    </select>
}
else
{
    <select id="yearSelect" onchange="ChangeYear(this.value)">
        @{
            var lastSelected = Model.Dates;    
            @for (int year = 2024; year > 2003; year--)
            {
                var displayYear = (year - 1).ToString() + "-" + (year - 2000).ToString("D2");
                var isSelected = false;
                @if (lastSelected == year.ToString())
                {
                    isSelected = true;
                }
                <option value="@year" selected="@isSelected">@displayYear</option>
            }
        }       
    </select>
}


<ul style="list-style-type:none; padding: 0;">
    <h3>Regular Season</h3>
    @foreach (var game in Model.regularSchedule.Results)
    {
        <li style="margin-bottom: 10px;">
            <div style="display: inline-block; width: 100px;">@game.date</div>
            <div style="display: inline-block; width: 250px;">@game.opponent</div>
            <div style="display: inline-block; width: 100px;">@game.score</div>
            <input type="checkbox" id="myCheck" onclick="Log(@game.id, '@game.date', this)" @(game.attended ? "checked" : "")>           
        </li>
    }
    @if(Model.League == "NBA")
    {
        <h3>Play-In</h3>
        @foreach (var game in Model.playInSchedule.Results)
        {
            <li style="margin-bottom: 10px;">
                <div style="display: inline-block; width: 100px;">@game.date</div>
                <div style="display: inline-block; width: 250px;">@game.opponent</div>
                <div style="display: inline-block; width: 100px;">@game.score</div>
                <input type="checkbox" id="myCheck" onclick="Log(@game.id, '@game.date', this)" @(game.attended ? "checked" : "")>
            </li>
        }
    }  
    <h3>Postseason</h3>
    @foreach (var game in Model.postSchedule.Results)
    {
        <li style="margin-bottom: 10px;">
            <div style="display: inline-block; width: 100px;">@game.date</div>
            <div style="display: inline-block; width: 250px;">@game.opponent</div>
            <div style="display: inline-block; width: 100px;">@game.score</div>
            <input type="checkbox" id="myCheck" onclick="Log(@game.id, '@game.date', this)" @(game.attended ? "checked" : "")>
        </li>
    }

</ul>

<div id="dates"></div>

<script>
    var datesContainer = document.getElementById("dates");
    function ChangeMonth(selectedDates){
        var year = document.getElementById("yearSelect").value;
        var dates = "";
        if('@Model.League' == "NBA"){
            if (selectedDates == "1201-0101") {
                dates = year.substring(0,4) + selectedDates.substring(0, 5) + (parseInt(year.substring(5)) + 2000).toString() + selectedDates.substring(5);
            }
            else if (selectedDates == "1015-1201"){
                dates = year.substring(0, 4) + selectedDates.substring(0, 5) + year.substring(0, 4) + selectedDates.substring(5);
            }
            else{
                dates = (parseInt(year.substring(5)) + 2000).toString() + selectedDates.substring(0, 5) + (parseInt(year.substring(5)) + 2000).toString() + selectedDates.substring(5);
                datesContainer.innerHTML = (parseInt(year.substring(5)) + 2000).toString();
            }
        }
        else{
            dates = '@Model.Dates'.substring(0, 4) + selectedDates.substring(0, 5) + '@Model.Dates'.substring(9, 13) + selectedDates.substring(5);
        }      
        var newUrl = "/Home/Schedule?league=" + encodeURIComponent('@Model.League') + "&team=" + encodeURIComponent('@Model.Team') + "&dates=" + encodeURIComponent(dates);
        window.location.href = newUrl;
    }

    function ChangeYear(selectedYear){
        var newUrl = "/Home/Schedule?league=" + encodeURIComponent('@Model.League') + "&team=" + encodeURIComponent('@Model.Team') + "&id=" + encodeURIComponent('@Model.ID') + "&dates=" + encodeURIComponent(selectedYear);
        window.location.href = newUrl;
    }

    function Log(id, date, checkbox){
        if(checkbox.checked){
            datesContainer.innerHTML = date;
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/Home/Log", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            const data = {
                ID: String(id),
                Home: "",
                Away: "",
                Date: String(date),
                Score: "",
                League: '@Model.League',
                Location: ""
            };
            const jsonData = JSON.stringify(data);
            datesContainer.innerHTML = jsonData;
            xhr.send(jsonData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) { // 4 indicates that the request is complete
                    if (xhr.status === 200) {
                        if (xhr.responseText == "Success.") {
                        }
                    }
                }
            }
        }
        else{
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/Home/Unlog", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            const data = {
                UserID: "",
                GameID: String(id)
            };
            const jsonData = JSON.stringify(data);
            xhr.send(jsonData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) { // 4 indicates that the request is complete
                    if (xhr.status === 200) {
                        if (xhr.responseText == "Success.") {
                        }
                    }
                }
            }
        }
    }
</script>

        