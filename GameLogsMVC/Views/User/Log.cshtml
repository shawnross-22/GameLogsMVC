@model GameLogsMVC.Models.ViewData.DiaryView

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
    }

    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0); /* Semi-transparent black overlay */
        display: none; /* Initially hidden */
    }

    #userSummary {
        display: flex;
        justify-content: space-around;
        align-items: center;
        margin: auto;
        padding: 10px;
    }

        #userSummary h2,
        #userSummary h3 {
            margin: 0;
        }

    #userNavBar {
        background-color: lightgray;
        display: flex;
        justify-content: space-around;
        margin: auto;
        padding: 10px;
    }

    .navbarUL {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
        max-width: 100%;
    }

    .nav-item {
        display: inline-block;
        margin-right: 2%;
        max-width: 14.67%;
        font-size: 15px;
    }

    .nav-link {
        text-decoration: none;
        color: #333;
    }

    @@media (max-width: 750px) {
        .nav-item {
            font-size: 9px;
            text-align: left;
        }

        h2 {
            font-size: 11px;
        }

        h3 {
            font-size: 10px;
        }

        h4, td, th {
            font-size: 9px;
        }
    }
</style>

<div id="userNavBar" class="navbar">
    <ul class="navbarUL">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Index" asp-route-userName="@Model.User">@Model.User</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" style="text-decoration: underline;" asp-area="" asp-controller="User" asp-action="Log" asp-route-userName="@Model.User" asp-route-league="MLB">Log</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Stats" asp-route-userName="@Model.User" asp-route-league="MLB">Stats</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Badges" asp-route-userName="@Model.User">Badges</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Followers" asp-route-userName="@Model.User">Followers</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Following" asp-route-userName="@Model.User">Following</a>
        </li>
    </ul>
</div>

<select id="leagueSelect" onchange="ChangeLeague(this.value)">
    <option value="MLB" selected="@(Model.League == "MLB")">MLB</option>
    <option value="NBA" selected="@(Model.League == "NBA")">NBA</option>
    <option value="NCAAF" selected="@(Model.League == "NCAAF")">NCAAF</option>
    <option value="NFL" selected="@(Model.League == "NFL")">NFL</option>
    <option value="NCAAB" selected="@(Model.League == "NCAAB")">NCAAB</option>
</select>

<div style="overflow-x: auto;">
    <table border="1" id="gameTable">
        <thead>
            <tr>
                <th>Date</th>
                <th>Home Team</th>
                <th>Away Team</th>
                <th>Score</th>
                <th>Location</th>
                @if(Model.GameResult.attended != null)
                {
                    <th>
                        Attended
                        <select id="attendedFilter" onchange="applyFilters()">
                            <option value="All">All</option>
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </th>
                }
                @if (Model.GameResult.watched != null)
                {
                    <th>
                        Watched
                        <select id="watchedFilter" onchange="applyFilters()">
                            <option value="All">All</option>
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </th>
                }
            
                <!-- Add more columns for other attributes as needed -->
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.GameResult.games.Count(); i++)
            {
                <tr>
                    <td>@Model.GameResult.games[i].Date</td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GameResult.games[i].League, teamID = @Model.GameResult.games[i].HomeTeamID.Replace(Model.GameResult.games[i].League, "")})">@Model.GameResult.games[i].Home</a></td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GameResult.games[i].League, teamID = @Model.GameResult.games[i].AwayTeamID.Replace(Model.GameResult.games[i].League, "")})">@Model.GameResult.games[i].Away</a></td>
                    <td><a href="@Url.Action("BoxScore", "Home", new { id = Model.GameResult.games[i].ID, league = Model.GameResult.games[i].League})">@Model.GameResult.games[i].Score</a></td>
                    <td>@Model.GameResult.games[i].Location</td>
                    @if (Model.GameResult.attended != null)
                    {
                        <td><input type="checkbox" class="attendedCheckbox" @(Model.GameResult.attended[i] == true ? "checked" : "")></td>
                    }
                    @if (Model.GameResult.watched != null)
                    {
                        <td><input type="checkbox" class="watchedCheckbox" @(Model.GameResult.watched[i] == true ? "checked" : "")></td>
                    }
                    <!-- Add more cells for other attributes as needed -->
                </tr>
            }
            
        </tbody>
    </table>
</div>



<script>
    function ChangeLeague(selectedLeague) {
        var newUrl = "/User/Log?userName=" + encodeURIComponent('@Model.User') + "&league=" + encodeURIComponent(selectedLeague);
        window.location.href = newUrl;
    }

    function applyFilters() {
        const attendedFilter = document.getElementById('attendedFilter').value;
        const watchedFilter = document.getElementById('watchedFilter').value;

        const rows = document.querySelectorAll('#gameTable tbody tr');

        rows.forEach(row => {
            const attendedCheckbox = row.querySelector('.attendedCheckbox');
            const watchedCheckbox = row.querySelector('.watchedCheckbox');

            const isAttended = attendedCheckbox && attendedCheckbox.checked;
            const isWatched = watchedCheckbox && watchedCheckbox.checked;

            // Determine if row should be visible based on filter criteria
            const attendedMatch = (attendedFilter === "Yes" && isAttended) || (attendedFilter === "No" && !isAttended) || attendedFilter === "All";
            const watchedMatch = (watchedFilter === "Yes" && isWatched) || (watchedFilter === "No" && !isWatched) || watchedFilter === "All";

            row.style.display = attendedMatch && watchedMatch ? '' : 'none';
        });
    }


    function Log(id, date, checkbox, attended) {
        @*document.getElementById('overlay').style.display = 'block';*@
        if (checkbox.checked) {
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/Home/Log", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            const data = {
                ID: String(id),
                Home: "",
                Away: "",
                Date: String(date),
                Score: "",
                League: '@Model.League',
                Location: "",
                Season: attended,
                HomeTeamID: "",
                AwayTeamID: ""
            };
            const jsonData = JSON.stringify(data);
            xhr.send(jsonData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) { // 4 indicates that the request is complete
                    if (xhr.status === 200) {
                        if (xhr.responseText == "Success") {
                            @*document.getElementById('overlay').style.display = 'none';*@
                        }
                    }
                }
            }
        }
        else {
            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/Home/Unlog", true);
            xhr.setRequestHeader("Content-Type", "application/json");
            const data = {
                UserID: "",
                GameID: String(id),
                Attended: attended
            };
            const jsonData = JSON.stringify(data);
            xhr.send(jsonData);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) { // 4 indicates that the request is complete
                    if (xhr.status === 200) {
                        if (xhr.responseText == "Success") {
                            document.getElementById('overlay').style.display = 'none';
                        }
                    }
                }
            }
        }
    }

</script>

