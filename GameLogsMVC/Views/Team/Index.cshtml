@model GameLogsMVC.Models.ViewData.TeamView

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
    }

</style>

<div class="team-info">
    @if (Model.Team.Team.Logos != null)
    {
        <img src="@Model.Team.Team.Logos[0].Href" style="width: 150px; height: 150px;" />
    }
    <div class="player-details">
        <h3>@Model.Team.Team.DisplayName</h3>
    </div>
    <div class="player-details">
        <p id="recordAttended" style="display: none;">Record: @Model.RecordAttended</p>
        <p id="recordWatched" style="display: block;">Record: @Model.RecordWatched</p>
    </div>
</div>

<select id="viewSelect" onchange="ChangeView(this.value)">
    <option value="Watched">Watched</option>
    <option value="Attended">Attended</option>
</select>

<div id="teamWatched" style="overflow-x: auto;">
    <table border="1">
        <thead>
            <tr>
                <th>Date</th>
                <th>Home Team</th>
                <th>Away Team</th>
                <th>Score</th>
                <th>Location</th>

                <!-- Add more columns for other attributes as needed -->
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.GamesWatched.Count(); i++)
            {
                <tr>
                    <td>@Model.GamesWatched[i].Date</td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GamesWatched[i].League, teamID = @Model.GamesWatched[i].HomeTeamID.Replace(Model.GamesWatched[i].League, "")})">@Model.GamesWatched[i].Home</a></td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GamesWatched[i].League, teamID = @Model.GamesWatched[i].AwayTeamID.Replace(Model.GamesWatched[i].League, "")})">@Model.GamesWatched[i].Away</a></td>
                    <td><a href="@Url.Action("BoxScore", "Home", new { id = Model.GamesWatched[i].ID, league = Model.GamesWatched[i].League})">@Model.GamesWatched[i].Score</a></td>
                    <td>@Model.GamesWatched[i].Location</td>
                    <!-- Add more cells for other attributes as needed -->
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="teamAttended" style="overflow-x: auto; display: none;">
    <table border="1">
        <thead>
            <tr>
                <th>Date</th>
                <th>Home Team</th>
                <th>Away Team</th>
                <th>Score</th>
                <th>Location</th>

                <!-- Add more columns for other attributes as needed -->
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.GamesAttended.Count(); i++)
            {
                <tr>
                    <td>@Model.GamesAttended[i].Date</td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GamesAttended[i].League, teamID = @Model.GamesAttended[i].HomeTeamID.Replace(Model.GamesAttended[i].League, "")})">@Model.GamesAttended[i].Home</a></td>
                    <td><a style="display: block;" href="@Url.Action("Index", "Team", new {league = @Model.GamesAttended[i].League, teamID = @Model.GamesAttended[i].AwayTeamID.Replace(Model.GamesAttended[i].League, "")})">@Model.GamesAttended[i].Away</a></td>
                    <td><a href="@Url.Action("BoxScore", "Home", new { id = Model.GamesAttended[i].ID, league = Model.GamesAttended[i].League})">@Model.GamesAttended[i].Score</a></td>
                    <td>@Model.GamesAttended[i].Location</td>
                    <!-- Add more cells for other attributes as needed -->
                </tr>
            }
        </tbody>
    </table>
</div>

<script>

    function ChangeView(selectedView) {
        if (selectedView === "Watched") {
            document.getElementById("teamWatched").style.display = "block";
            document.getElementById("teamAttended").style.display = "none";
            document.getElementById("recordWatched").style.display = "block";
            document.getElementById("recordAttended").style.display = "none";
        }
        else if (selectedView === "Attended") {
            document.getElementById("teamWatched").style.display = "none";
            document.getElementById("teamAttended").style.display = "block";
            document.getElementById("recordWatched").style.display = "none";
            document.getElementById("recordAttended").style.display = "block";
        }
    }
</script>